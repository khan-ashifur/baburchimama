import React, { useState } from 'react';
import axios from 'axios';
import './App.css';

function App() {
  const [mode, setMode] = useState('cook'); // 'cook' or 'suggest'
  const [ingredients, setIngredients] = useState('');
  const [servings, setServings] = useState('');
  const [response, setResponse] = useState('');
  const [loading, setLoading] = useState(false);

  const handleSubmit = async () => {
    if (!ingredients.trim() || !servings.trim()) {
      setResponse('ü•ö ‡¶Æ‡¶æ‡¶Æ‡¶æ, ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶¶‡ßá‡¶®! ‡¶ï‡¶ø ‡¶∞‡¶æ‡¶®‡ßç‡¶ß‡¶Æ‡ßÅ ‡¶Ü‡¶∞ ‡¶ï‡ßü‡¶ú‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø?');
      return;
    }

    setLoading(true);
    setResponse('');

    try {
      const endpoint =
        mode === 'cook'
          ? 'http://localhost:5000/ask-mama'
          : 'http://localhost:5000/suggest-mama';

      const res = await axios.post(endpoint, {
        ingredients,
        servings,
      });

      setResponse(res.data.reply || 'ü•ö ‡¶Æ‡¶æ‡¶Æ‡¶æ, ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶¨‡ßÅ‡¶ù‡¶≤‡¶æ‡¶Æ ‡¶®‡¶æ... ‡¶Ü‡¶∞‡ßá‡¶ï‡¶ü‡ßÅ ‡¶™‡¶∞‡ßá ‡¶ü‡ßç‡¶∞‡¶æ‡¶á ‡¶ï‡¶∞‡ßá‡¶®‡•§');
    } catch (err) {
      console.error(err);
      setResponse('‚ùå ‡¶Æ‡¶æ‡¶Æ‡¶æ, ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ó‡¶£‡ßç‡¶°‡¶ó‡ßã‡¶≤ ‡¶π‡¶á‡¶õ‡ßá... ‡¶è‡¶ï‡¶ü‡ßÅ ‡¶™‡¶∞‡ßá ‡¶ü‡ßç‡¶∞‡¶æ‡¶á ‡¶ï‡¶∞‡ßá‡¶®‡•§');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="container">
      <h1>‡¶Æ‡¶æ‡¶Æ‡¶æ, ‡¶ï‡¶ø ‡¶ñ‡¶æ‡¶á‡¶¨‡ßá‡¶® ‡¶ï‡¶®? üç¥</h1>

      <div className="button-group">
        <button
          onClick={() => setMode('cook')}
          className={mode === 'cook' ? 'active' : ''}
        >
          ‡¶Æ‡¶æ‡¶Æ‡¶æ, ‡¶ï‡¶ø ‡¶ñ‡¶æ‡¶á‡¶¨‡ßá‡¶® ‡¶ï‡¶®?
        </button>

        <button
          onClick={() => setMode('suggest')}
          className={mode === 'suggest' ? 'active' : ''}
        >
          ‡¶Æ‡¶æ‡¶Æ‡¶æ, ‡¶ï‡¶ø ‡¶ñ‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º?
        </button>
      </div>

      {mode === 'cook' ? (
        <>
          <label>‡¶Æ‡¶æ‡¶Æ‡¶æ ‡¶ï‡¶ø ‡¶∞‡¶æ‡¶®‡¶¨‡ßã?</label>
          <input
            type="text"
            placeholder="‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£‡¶É ‡¶ó‡¶∞‡ßÅ‡¶∞ ‡¶§‡ßá‡¶π‡¶æ‡¶∞‡¶ø, ‡¶ö‡¶ø‡¶ï‡ßá‡¶® ‡¶¨‡¶ø‡¶∞‡¶ø‡ßü‡¶æ‡¶®‡¶ø, ‡¶ñ‡¶æ‡¶∏‡¶ø‡¶∞ ‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡¶æ"
            value={ingredients}
            onChange={(e) => setIngredients(e.target.value)}
          />

          <label>‡¶ï‡¶ú‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø?</label>
          <input
            type="number"
            placeholder="‡ßß"
            value={servings}
            onChange={(e) => setServings(e.target.value)}
          />
        </>
      ) : (
        <>
          <label>‡¶¨‡¶æ‡ßú‡¶ø‡¶§‡ßá ‡¶¨‡¶æ ‡¶´‡ßç‡¶∞‡¶ø‡¶ú‡ßá ‡¶ï‡¶ø ‡¶Ü‡¶õ‡ßá?</label>
          <input
            type="text"
            placeholder="‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£‡¶É ‡¶°‡¶ø‡¶Æ, ‡¶Æ‡ßÅ‡¶∞‡¶ó‡¶ø, ‡¶Ü‡¶≤‡ßÅ, ‡¶ö‡¶æ‡¶≤..."
            value={ingredients}
            onChange={(e) => setIngredients(e.target.value)}
          />

          <label>‡¶ï‡¶ú‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø?</label>
          <input
            type="number"
            placeholder="‡ßß"
            value={servings}
            onChange={(e) => setServings(e.target.value)}
          />
        </>
      )}

      <button onClick={handleSubmit}>
        {loading ? '‡¶Æ‡¶æ‡¶Æ‡¶æ ‡¶ö‡¶ø‡¶®‡ßç‡¶§‡¶æ ‡¶ï‡¶∞‡¶§‡¶æ‡¶∏‡¶ø, ‡¶ñ‡¶æ‡¶∞‡¶æ‡¶®...' : '‡¶Æ‡¶æ‡¶Æ‡¶æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶Æ?'}
      </button>

      {response && (
        <div className="response-box">
          {response}
        </div>
      )}
    </div>
  );
}

export default App;
